tokens:
    accessTokenUri: ${ACCESS_TOKEN_URI}
    tokenInfoUri:  ${TOKEN_INFO_URI}
    credentialsDirectory: ${CREDENTIALS_DIR}
    token-configuration-list:
        - tokenId: producer
          scopes:
              - uid
              - warehouse-allocation.read
        - tokenId: zalando-nakadi
          scopes: nakadi.event_stream.write

producer.events.uri: ${PRODUCER_EVENTS_URI}
nakadi.submission.uriTemplate: ${NAKADI_SUBMISSION_URI_TEMPLATE}

logbook:
  filter.enabled: true
  format.style: json
  obfuscate:
    headers:
      - Authorization
      - X-Secret
    parameters:
      - access_token
  write:
    category: http.traffic
    level: INFO

# We don't expose any actual HTTP services, but want the management functions (/health, /info, ...).
#
# When defining a separate management.port,  we get two started tomcats, one of them not having anything.
# Thus we just use server.port with the management port number.

server.port: 7979

logging.pattern.console: "%date {%level} [%thread] [%X{X-FLOW-ID}] [%logger] %message%n"
logging.pattern.file: "%date {%level} [%thread] [%X{X-FLOW-ID}] [%logger] %message%n"
